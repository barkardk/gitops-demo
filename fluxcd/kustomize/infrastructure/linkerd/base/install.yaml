---
###
### Linkerd Namespace
###
kind: Namespace
apiVersion: v1
metadata:
  name: linkerd
  annotations:
    linkerd.io/inject: disabled
  labels:
    linkerd.io/is-control-plane: "true"
    config.linkerd.io/admission-webhooks: disabled
    linkerd.io/control-plane-ns: linkerd
    pod-security.kubernetes.io/enforce: privileged
---
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.4
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQUsvU280d3V0SHI5OVhSWDUyR3FteHd3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNak13TmpFME1UTXhPVE0wV2hjTk1qUXdOakV6TVRNeE9UTTBXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU5tTisrOFNPamlVRkpFQXc4bmRBVWdNNHFpMWFVN2lNaVprUmZXQTRiMU5MdlFRTlpwZgovT09jek9QSWtENmJBNXh2eFFzbHNxSlJIOXAvOTFEQlE1eVN3Vy9HTm15bnAxaHAxM3VKay84cTlUejltVG5tClJEbUNVZDRSSnhMWWROZXRObHBmenVMaGJNV2phajVMcmlJWDFWaU5FRnovYlAvUEV3SFNoS21KdHhJa1gyWkgKR3czRjh0VHN5VGswaVR0UEpGK0pZRmlDSkNNeVQzZGZkMXV1bnFxaXp2a3dxcTJUZHhVZUltWnNzQ3pyWTZQMgpDSE45WnVEdk0vRHhuZjJUV3BRQ0xPaUJHLzFsYUFBZW5XS3Y1Z1BwKytHbTdNc1ZlUW95MlFqYUpHcnE4MHlkClR4ZldzVHRDK0xJaHFTbDljS0hsSGNNWmNVRWN0WDZGUFZjQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFDK0JnRWVxeTcrK3FCcXVBaUtJa3VKaEsxYXR2QTkzRnhWUWdGd1U0V2wKbyt5QXZ2Y0ZIUU1ucTFKeW05Z2toOXFDdEg4aXUybzJicVpKZTQ2RmZZRndOb0dEc1E5aDdHMEY0OGM1SStuMAp3Nk1xTFlJMVBUZmV3Vi9pOFdmOWpwODhVM1NZTUtLNXpESGl5TmE0QVdsNWh6VTdOOHVTcnU3K3dNYk45YzdTCmxEZ2JLYVptbkZPRXdpUDF1ZG96blMvUUxKTFVZeUF5L0JiSWRERWw3OXQ4TzlxODdzU1l5aU1ZczlNK3dQVzQKaVNXMTZrRVFCWUlhY1NnS24xTW40VXBrVTlDT0M4TG5BY1lOUVpoT29oNjF1Vjcwdi83Si8rUittVytqMFJ0WQorVzhZc2J5Mk9pOGczQlQ5UVV5eDVwVEhSd00veHNkZXNZVHpCY01mVVhROQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMlkzNzd4STZPSlFVa1FERHlkMEJTQXppcUxWcFR1SXlKbVJGOVlEaHZVMHU5QkExCm1sLzg0NXpNNDhpUVBwc0RuRy9GQ3lXeW9sRWYybi8zVU1GRG5KTEJiOFkyYktlbldHblhlNG1UL3lyMVBQMloKT2VaRU9ZSlIzaEVuRXRoMDE2MDJXbC9PNHVGc3hhTnFQa3V1SWhmVldJMFFYUDlzLzg4VEFkS0VxWW0zRWlSZgpaa2NiRGNYeTFPekpPVFNKTzA4a1g0bGdXSUlrSXpKUGQxOTNXNjZlcXFMTytUQ3FyWk4zRlI0aVpteXdMT3RqCm8vWUljMzFtNE84ejhQR2QvWk5hbEFJczZJRWIvV1ZvQUI2ZFlxL21BK243NGFic3l4VjVDakxaQ05va2F1cnoKVEoxUEY5YXhPMEw0c2lHcEtYMXdvZVVkd3hseFFSeTFmb1U5VndJREFRQUJBb0lCQUFpR1Q4RG1iZkdabTlTeQp1dmxGOTY3akVsNlovUzVpSHFUeWVPdE55WXFwWTVXY3JQMEhsZGsxWTdIcFFmMnlCVW96OXZ5ZzFZY1d0ckRSCkl0ZS9PdTcvc1NTNEY1bmFWK3hXK1dLVjJYNitLQzNqb2dWcXlIR1ljYXpKNzBZRnhVNU9NenNIVmd2OTJVMUYKUWZ4KzZxdmJVempORGo4V295YkM3bk83MUFid2sveVhWZm81dnhPVzFXVUNJQ2NJV1ZBd2hmSFNFMjZjbmQ5Uwo2M3o1ZmdiM2ZaK3E3ZFV1Y3VMQnM0dmc5cVplSGMwTXRlRGlDdHc4Sy9zQUc1cE1sdmtwd1BTNTdPM21sQzJjCmd4ZndPRVhkOHVuVHJpdGE2OHc1K0dKWmJDb3diSUJWU2JPVk5HcWEvaEZFaG1aT2V0SDZqNmpjVjBrM0w0VC8KVHQ3YTBvRUNnWUVBM2pKb085dXZSRFpjQS9rd3pIcldNSUNCdGNUdGtTZjloOHd6YkRQMUtydWtYZmczM2gwdgowMU1CMEFRaGhLaEJlT0x6cEI4emRINkZuaDludGcrcWdQb2tkVXZ2N0FyRmpQRktnL3FXdGlMWVNHRlI0Y3J3Cjk3R0RaK1U2S01aZHZDVzRJbEVYN3FRS1F3MGRiRk93d2xNL2FJaXMzSU5CQnFFLzE1UlI2QmtDZ1lFQStxYkgKMkd1RWtibFJITHNWbDFnODBSbUYxNlF0T3NqV1RwYTNvUlNwelBwbjVxbVhEWThFQmtsZEw2NXhtUVpFVWhhdApTYm96YzI1Skc4ZUFkQkhvRlVNcFRSdnJ6dGNBdkJabllaV01xdFJiSUhMaVJVQVNqWUpFUDhSSyt0Mks1SnNtCnBxQzIwb1BPd1g1dnYreTFZQU1wN2p5MWN2QS9PTU1SNmcrRHZ1OENnWUVBelBUcU9PeTNpdEFwcUhDZmxyNW4KL0cxTk9JSGlNVmNXQWNGV1hhUy9yUjlReW0wLysxNG8wMkZwOXBzWTMramtHOEljdzNNVVg0eWxhK25FSEtmdQp1dklCMTBDb21xNkU4ekZQYnRZalZ2WmxVcjZTYlJocGxkRGtTVjJrZkNBZUxvTU1pbnNLL0ZITU5YVlBnckRnCkJ5QUxDVDJwVmU2c2VKVWM4cG9adzJFQ2dZQU9XSk5ob0szQ3hXK09ER3NzOFdEeHV0czlQMmxUVHdGdEdCVkUKZy9GQUNTai9PNytvaUFINzlpRCtSS2E5MG0wQW9jbWpTYVArUEZhMDMxTkwwV2FPS1B6cEsrcndPTUFUQTlsQQo3WlZTaGJyOWZYWFQ3dG5nL1k2NGM1eXpCUkVaQ29SSXp6UUhrb0czODJ1aitZRmNFSEpLNzNDWE5vYjMwYnBwCndoK1JRd0tCZ0h1VERjMFlwTDR2Z1NBZzFDSWpkZmIwdHpOeVJWY0R2dmsvODZTSmhoRGpDMjJuZUpVN0Q2NGUKOFlkd200aXFRdFJHcWtFNzBXWlBMWE5uWlR2WXNxNHRSbnZaMCtiUmRNOVRhL0h2VFZScVl2d3A0SjJVUFQrZQpnUU9wNFRQUW1FeHUwWkRSODN3enZxKzd5dWJVMk02VXo1R1Y4NWlTc0xTSVdMUE5CUWlWCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQUsvU280d3V0SHI5OVhSWDUyR3FteHd3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNak13TmpFME1UTXhPVE0wV2hjTk1qUXdOakV6TVRNeE9UTTBXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU5tTisrOFNPamlVRkpFQXc4bmRBVWdNNHFpMWFVN2lNaVprUmZXQTRiMU5MdlFRTlpwZgovT09jek9QSWtENmJBNXh2eFFzbHNxSlJIOXAvOTFEQlE1eVN3Vy9HTm15bnAxaHAxM3VKay84cTlUejltVG5tClJEbUNVZDRSSnhMWWROZXRObHBmenVMaGJNV2phajVMcmlJWDFWaU5FRnovYlAvUEV3SFNoS21KdHhJa1gyWkgKR3czRjh0VHN5VGswaVR0UEpGK0pZRmlDSkNNeVQzZGZkMXV1bnFxaXp2a3dxcTJUZHhVZUltWnNzQ3pyWTZQMgpDSE45WnVEdk0vRHhuZjJUV3BRQ0xPaUJHLzFsYUFBZW5XS3Y1Z1BwKytHbTdNc1ZlUW95MlFqYUpHcnE4MHlkClR4ZldzVHRDK0xJaHFTbDljS0hsSGNNWmNVRWN0WDZGUFZjQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFDK0JnRWVxeTcrK3FCcXVBaUtJa3VKaEsxYXR2QTkzRnhWUWdGd1U0V2wKbyt5QXZ2Y0ZIUU1ucTFKeW05Z2toOXFDdEg4aXUybzJicVpKZTQ2RmZZRndOb0dEc1E5aDdHMEY0OGM1SStuMAp3Nk1xTFlJMVBUZmV3Vi9pOFdmOWpwODhVM1NZTUtLNXpESGl5TmE0QVdsNWh6VTdOOHVTcnU3K3dNYk45YzdTCmxEZ2JLYVptbkZPRXdpUDF1ZG96blMvUUxKTFVZeUF5L0JiSWRERWw3OXQ4TzlxODdzU1l5aU1ZczlNK3dQVzQKaVNXMTZrRVFCWUlhY1NnS24xTW40VXBrVTlDT0M4TG5BY1lOUVpoT29oNjF1Vjcwdi83Si8rUittVytqMFJ0WQorVzhZc2J5Mk9pOGczQlQ5UVV5eDVwVEhSd00veHNkZXNZVHpCY01mVVhROQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.4
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRQm5NZUkwbWNlb3RZMFk0N3A5SEl2VEFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpNd05qRTBNVE14T1RNMFdoY05NalF3TmpFek1UTXhPVE0wV2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURrZk0rMHEyUS8vZGQwSSt4QVQvU0ltVkRjSW5GdmIyMy9JZ29uVmQ0Ygp0NVArVE1ZRXY0TFVlZXEvR0JkelI0RFFZeHpudmltUmUrSUF5RGQ5c3daTkd3NnZIQ2tuU1MrVXhtRmE4ZnlTCnh4bWxFQVp5Qk8wNTN3SDlHTmw3dEthRjNDc2NHQjU4Vlo0R3NUU0lYTytObkdOc3QrUjRFbWk2V2tzVUNLTXUKN3h5YTV1dlVyOXRHVWRpT0dpRjZ1bG1rWGRXZmlaYnJKZ0FPNmtCb1NVUWYrUHhlSGZrcWVjaS91bkNCbGRSRApSc0dXZERHQ2xadnQyZDNXNVZCQnk4YTE3MTBQYTVnblJZZGY5aEJmc2NwN2hFVzgyY0xmQXFrUG9MdkRVSkZmCllMSlliUWRhR2xQNnNZQjRIZlNOY3NKakplUHVYb3hsWTVsM1JVeVRkUDhsQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKeUM0aG9NMEFxYkxMdm9aT2R6d1EvR0lnejUKY1JYYlMrRzVpcU1NTDdydDFxT0FCR3djbXF4dmQyRElYSW5nSkx3VmZWeS84bjVIR2RxT2Z4UktvRTY3VW0rMwpDTHZrVHBxZWNWR1JEb3NZekI1TjBGRWJzY2cwS3pzZU5NVGV3cXl6L1J2bXRKSGhPaUtEdW5tN0laTkxCaktyClZYQWM0Y1NmbnBKWUFzQllZQTFHazJYNHZRSlc3T1Vjc3lva3l4WWV5SElhK2ZXMkdicFRzeXYrWk91MXRYeEIKdlVycFZ6WXZiTGt0cGdkSGd4OUFCUWZvQ2F5bU5DNFkydFpYQitka0hWbWF4ZVhiN25sc0h1U1h2aVhncU1oMQpDVnNFaU9rTXJraExhS2pYV3lmZjZ3MkFHcTBsWUQ3NVRyak5RdXdCVHhvOVIyemxwaitGZDBVVkNUND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNUh6UHRLdGtQLzNYZENQc1FFLzBpSmxRM0NKeGIyOXQveUlLSjFYZUc3ZVQva3pHCkJMK0MxSG5xdnhnWGMwZUEwR01jNTc0cGtYdmlBTWczZmJNR1RSc09yeHdwSjBrdmxNWmhXdkg4a3NjWnBSQUcKY2dUdE9kOEIvUmpaZTdTbWhkd3JIQmdlZkZXZUJyRTBpRnp2alp4amJMZmtlQkpvdWxwTEZBaWpMdThjbXVicgoxSy9iUmxIWWpob2hlcnBacEYzVm40bVc2eVlBRHVwQWFFbEVIL2o4WGgzNUtubkl2N3B3Z1pYVVEwYkJsblF4CmdwV2I3ZG5kMXVWUVFjdkd0ZTlkRDJ1WUowV0hYL1lRWDdIS2U0UkZ2Tm5DM3dLcEQ2Qzd3MUNSWDJDeVdHMEgKV2hwVCtyR0FlQjMwalhMQ1l5WGo3bDZNWldPWmQwVk1rM1QvSlFJREFRQUJBb0lCQVFDQ3NObGxiL3RobHVKYgo3Z2crS1Aybi9Ib0IwRG11RWNDTEJIOW1USGxFeFZhRFNJcWpRSitteFMxK3JGc05kMEs0NzFnalBlUXM4UDB1CmtWY2NNUUJUcmp4UjhQdWhHdjE2VFpaMkhKL3BuTFNRYzRBY1M3RWRQdSsyUXpaeXlidk9LVWNIUk14N05jV3oKOGp3b0czQnlRWmVsSWZJdXMranZYcUkvRFVtNWw3ckpHNHlEZVAwWHRpSDFPck5jbTFKMDZNcFN4U2pGdXpKNgpPSSs5bmZvRzQyY1RlTGFsLzFBT2xWWkp3V3hXaytuTXc3SFZVTUFEYXNkZVZ4UjdDcDEvTTI2dUdMT3ZydUpKClNwTUoyd1pwYWR4RSt4ZXpFeDdQUUpHQjVLNjBrQ0xjRENFRFRSd1NlcFg0WVNET3hBandnRjdLT2NYckNXZTkKSXg4dVNQYnBBb0dCQVBNVi9oSTVmTUgyYUNZWDJjVEVvM2VlWWpWeW8zRFZoU3A4eUgxNmpKb1dHTVBXT2pNLwpZUDFqSlhudHE1SFBURG9WckdyZDdpVEVvTGdaNm1QR2h1eXBjZnpHNnE1QURJY2VpU1BISkN0OFlaOWRrdExoCnVsQWQ3b1FMQXdISExGREtLMEJiVXc5TzBlUVQyTEF3RkZlbURhOFIvR3gwNTdnWnZRdnRHT0puQW9HQkFQQ2cKUjE1MGNMeExIOEpyV1BUNjc5Yi8ydnk5MklqUXNjRnhPTHcxSGl5WDkrc2ZYUG9yc0JhbHk1UEs1R25ERXFsRApGclEyQjlFUFI4d3NGcVVQalJMby9ESUorcitXTmVvV05FN0lqK256ZTV3RGFqTHFJTDBnVFpCQU1IM2UvWkxnCkFuTVlhaGcrU1pIb3VQa2lna1c0ZTVPUWVzTjYzTE1kUEhJeGFsS1RBb0dBZnFySkYrb0l6bkY5MTh1NTJFUzMKQVkvd2tQVkpvWFJCemQvMEFSNm93V29lUVg0U0diNCs1Z3FSN3JVZ0gveXJOZUV4VlFhTUgzQ3Vad0JxR00vTQpZdW53MGMwOVlNdFRPOTEzak1NcVg5YVNjQjZzY1dMYVdRRWYxb0orY0tDK3dPSjRJekx6VnhpMVdtblZFZ29iCnI0aUJ2T1pjYUkrS1oyNVNDakxrTXFVQ2dZRUE3Z0E2Vnl5b3pUVXBCcTRTNE16TEtVY01IT3pTSGhEOW9LNFMKUmVYc0lJTjNqaklKVHRDamJPTTBSc3hwdkVwY1ROcTB2QzZzOEpWQ21Lb0xBOXdyMTBabkhEOU9xdTB5Q29WSAoyNXo0NjVnTzdUTmJlVnltWVNwd1RYdVArdy95azdISitubHRodWtrNzVMV1VtVlZvUXhsL29EclRDcGIzVFhQCnNjczZ0TTBDZ1lBVTh2OG5GY2QvRlB2K01qRlk4Y0Vqc0RQSnZLV3pFYzdnRDdJdjB4QTduUStEeTM4cGJjZm8KeGV3RHBDb0JrRHRxRlJ4Wks5eG5IUEV0NzgvdFFpckhBSTN0azZjYS9Pd0VXTy9YUjBZK1NXV0VvU3IwY0x4VAo3VzZ2dC80dmVBUnFybzUzWXI2ZDRxbmg2dVBWcmxvUTQ0RUFsZlk4MThwOTZma1ByU1V6SUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRQm5NZUkwbWNlb3RZMFk0N3A5SEl2VEFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpNd05qRTBNVE14T1RNMFdoY05NalF3TmpFek1UTXhPVE0wV2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURrZk0rMHEyUS8vZGQwSSt4QVQvU0ltVkRjSW5GdmIyMy9JZ29uVmQ0Ygp0NVArVE1ZRXY0TFVlZXEvR0JkelI0RFFZeHpudmltUmUrSUF5RGQ5c3daTkd3NnZIQ2tuU1MrVXhtRmE4ZnlTCnh4bWxFQVp5Qk8wNTN3SDlHTmw3dEthRjNDc2NHQjU4Vlo0R3NUU0lYTytObkdOc3QrUjRFbWk2V2tzVUNLTXUKN3h5YTV1dlVyOXRHVWRpT0dpRjZ1bG1rWGRXZmlaYnJKZ0FPNmtCb1NVUWYrUHhlSGZrcWVjaS91bkNCbGRSRApSc0dXZERHQ2xadnQyZDNXNVZCQnk4YTE3MTBQYTVnblJZZGY5aEJmc2NwN2hFVzgyY0xmQXFrUG9MdkRVSkZmCllMSlliUWRhR2xQNnNZQjRIZlNOY3NKakplUHVYb3hsWTVsM1JVeVRkUDhsQWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFKeUM0aG9NMEFxYkxMdm9aT2R6d1EvR0lnejUKY1JYYlMrRzVpcU1NTDdydDFxT0FCR3djbXF4dmQyRElYSW5nSkx3VmZWeS84bjVIR2RxT2Z4UktvRTY3VW0rMwpDTHZrVHBxZWNWR1JEb3NZekI1TjBGRWJzY2cwS3pzZU5NVGV3cXl6L1J2bXRKSGhPaUtEdW5tN0laTkxCaktyClZYQWM0Y1NmbnBKWUFzQllZQTFHazJYNHZRSlc3T1Vjc3lva3l4WWV5SElhK2ZXMkdicFRzeXYrWk91MXRYeEIKdlVycFZ6WXZiTGt0cGdkSGd4OUFCUWZvQ2F5bU5DNFkydFpYQitka0hWbWF4ZVhiN25sc0h1U1h2aVhncU1oMQpDVnNFaU9rTXJraExhS2pYV3lmZjZ3MkFHcTBsWUQ3NVRyak5RdXdCVHhvOVIyemxwaitGZDBVVkNUND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["v1alpha1", "v1beta1"]
    resources:
    - authorizationpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
  sideEffects: None
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - httproutes/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd

---
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.4
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRYW1uMFVGWjM3dzJDSWpWR1VHZlM1VEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl6TURZeE5ERXpNVGt6TkZvWERUSTBNRFl4TXpFek1Ua3pORm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMaGk5MUprWVRrdi8ySEpLWEpCeCtldmp5cjJlR1IyQkZNZTZmalJpSHhUUHkzOQo1a1kxTlpacHlFTDFjMFFVUHhWTWNuZUhPbjVyakdnMGlUR3dBRnBMVTVkOVVibTFjRzN3dlAveXd5UGF2OHNOCk9tUmFtL1duT0ZpTzc3UHJ6UjVNK3ladzYra20yWEdBdjBSQkl4U2l6U21NZy9XWExOM3pUV2piOHRnL3hXb08KN3dRTWpLQjE4S3RIaFhaVVRrMG4yRFE4cDR2MUxUdmN3TlBUbENkVDZObDZFRHdYbTZsVzEwKzRPOWFWN1R4dApiblBHaS9PbFRmeW9pQU5UKzRGSDZCc1FwRkF1SmhxczAzQTRyWG53b1pXSkhQVTdBeTZqMk83eFo1emhqbzM0ClFWdFAzZ0RQdUdCRG4rVFVFNG5MYUJQckdIQVNMUnBSOThJWEh3MENBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRTNydkxJaVBBbVZMZ3VJTGlkUURTc0x1MENKRE1SNHRhcUoKYmIxRWVLSmVsTGZaS2xQYlpsdkd6cGk0Vm1oLzFFNG9xUWhBNWhGSkMwU2V0cUJ0UHhseFZuM2JLVGtpRnJBeQp2ZXlYbmVjWHNKRVU1RGFYNjRodC9RZE1TNStacEhmbTZkN3hhUFJBanExOHhBVnJPQ01FazNlajFRUVhzcVJtCmdwZUZ3cWo1eXE3Q1lxQUZDL1J6TWJKcGpLUFJnaU8rK2pSK0FrWmZrUzlvTW1jNUp2cUpRU05CRHRZUDZtMjYKMng5dXhWZWNFVUo5YlRrVnpuOWtWb2NteWlhK1NhRUNySURwdk1JTWxuRjk0cW5pZ2d6N1AzbnRSRGNiZ1hjTgpid3lxaS9HL284dWlTTkQ1ZXFvMlFzM2RTWmVrZmpaSGptZmlJZEhCMzIxVDJFSmszNkk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdUdMM1VtUmhPUy8vWWNrcGNrSEg1NitQS3ZaNFpIWUVVeDdwK05HSWZGTS9MZjNtClJqVTFsbW5JUXZWelJCUS9GVXh5ZDRjNmZtdU1hRFNKTWJBQVdrdFRsMzFSdWJWd2JmQzgvL0xESTlxL3l3MDYKWkZxYjlhYzRXSTd2cyt2TkhrejdKbkRyNlNiWmNZQy9SRUVqRktMTktZeUQ5WmNzM2ZOTmFOdnkyRC9GYWc3dgpCQXlNb0hYd3EwZUZkbFJPVFNmWU5EeW5pL1V0Tzl6QTA5T1VKMVBvMlhvUVBCZWJxVmJYVDdnNzFwWHRQRzF1CmM4YUw4NlZOL0tpSUExUDdnVWZvR3hDa1VDNG1HcXpUY0RpdGVmQ2hsWWtjOVRzRExxUFk3dkZubk9HT2pmaEIKVzAvZUFNKzRZRU9mNU5RVGljdG9FK3NZY0JJdEdsSDN3aGNmRFFJREFRQUJBb0lCQUJBcEhHUXNTQmtyQzhjVwpTbnVwS0V3Mkp1WXRGQUE2RjhieFByQ0FMT1k0cGFEeVQreDNYV3NCZW52ajUyWmdIK2ROKy9wZDc5S0V1cG1uCmdSN0p2ajRydS9mYkUvNmkyR2ZLWWNaTkVLMWp6c3VOTFVEK2NBem55eGgzN3FwbVVHUUhlenV6U2ZuMVhibUUKL3o2TU52Ym9EZk5HVFlxSTVYWE9qVXBUZk1WWEszQ1BZTElOSUN5Z0tFTWFDNXh1a3A1NnBjRUpTbnFjUVJySwpRZ0xFSlF3T2tRemRubzlxMWtvblpjS1hzY0pUaDlTdVZ5YUFTVXBFT2FYOUZMVTl1bEExUjZ2T0tXbzdlY2M2Cmx4SGVIZ3hqVHc4Y291eS9wbzJaaFBOa1ltOHl3cnpyQUMyOHMrMGJzbHc1RDZRaE1rNTJid3V2MDNONjhkOSsKT09DeWZFRUNnWUVBMmtHa1J1aWRrT2hEUDVTckFLUFl0UU5LbkZ2WTI5cnVmNmVOLzlHKzhwRGphbWhMWlNwSgp6dFZhS0ZjL242NlJ0T1U2UzFzbVl5R3BpdVpKZzloc3l0OVZTYklMMDk3ZHE1cVZkVUg2cDFGT0h3eFZGaytBCmF1b084OS9nNld6cXFTY0RFc0JIL2lheThCTm90aEhzS0xUbS9KL2ZkTUZmdjJzSlBEK3R4aDhDZ1lFQTJFWGkKWm5CamVZQ1A0NUtXS0l0dXpqQlFrT1ZFbnBmRWpTMGRzWFBtcFNUbGtlWXdURnhDZmlwZnpwMVBEb1I3a1J4egpnRXVqQldpT2ZBazhUNmJmWGFZK2tZYTFiYWx1UCtnQ0RRdklYaDBxTTBaZFMyWW1IK0MrMm9BSHJSZDgzditwCkFyZXhoQ09UNUhpT3kvL0xHMVpKRTZZREh1Wmp2L0FyMWZFbHZWTUNnWUJaUThlZ2lMc0k3VFd6NTJZWkdPb2sKL25laGc1OHFMRnluTVN4T21NWjBCdlk4S3ZQTEtJU1BaNHM4UEpMMUNEem5zMmtvTU50K1orSWp3UlFJTEpneQpVUzFjdXNsRG1qOG5WRTRVYXl2TkN0L2NxdnFSNldvb1VCcFZmQmRNNFJNSW84QUtCMEpxbkFGTFYyVFlNblJZCkljVG5SYXZxNEx2OFdoYW80Wko5R1FLQmdRQzNXaUFEcXRxYW9xVGFVV2NlUG4rVkxKN1JDSjR4T2dlM2pIMDAKK1VhYjBYa1RSU3pEUUNCYkovK0xnaEFKQmNaZ2t0ZFUrRXJnQmZGdU5NSTk0UUpUT2VLbnE2WGFyNTY1YlM5Mwo4ZnBQMTdmME9uNVRzdWsxYzJzNmdQcUJBMzJvN09SVFducVR4VG5YbzJHa2oxcVk5WUVFdUdUQzZKMitscFlEClRlc3A0d0tCZ1FDa1ZFT2tVMnRDeENvMExGRllpYW92aU1udFE0bDZ5RDhBSVIvYzlDekI1N2dNQXlYcEwxRXYKZ3F5elQrS0ZxdlF4T1EwejZhZG5DZWxScDhHL3pXK1c5V1ZiekVNd1BqVlZ2S2FYUW16SitwRHNKcmhtQWEvawoxbGNZL3VnUGZRTDhVRUdIb2ZTMUV0N2d2bVF2L2NBV1FTRS80aWlNVDlKUmhDZ1piYzhadGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQ==
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    null
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRYW1uMFVGWjM3dzJDSWpWR1VHZlM1VEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEl6TURZeE5ERXpNVGt6TkZvWERUSTBNRFl4TXpFek1Ua3pORm93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMaGk5MUprWVRrdi8ySEpLWEpCeCtldmp5cjJlR1IyQkZNZTZmalJpSHhUUHkzOQo1a1kxTlpacHlFTDFjMFFVUHhWTWNuZUhPbjVyakdnMGlUR3dBRnBMVTVkOVVibTFjRzN3dlAveXd5UGF2OHNOCk9tUmFtL1duT0ZpTzc3UHJ6UjVNK3ladzYra20yWEdBdjBSQkl4U2l6U21NZy9XWExOM3pUV2piOHRnL3hXb08KN3dRTWpLQjE4S3RIaFhaVVRrMG4yRFE4cDR2MUxUdmN3TlBUbENkVDZObDZFRHdYbTZsVzEwKzRPOWFWN1R4dApiblBHaS9PbFRmeW9pQU5UKzRGSDZCc1FwRkF1SmhxczAzQTRyWG53b1pXSkhQVTdBeTZqMk83eFo1emhqbzM0ClFWdFAzZ0RQdUdCRG4rVFVFNG5MYUJQckdIQVNMUnBSOThJWEh3MENBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRTNydkxJaVBBbVZMZ3VJTGlkUURTc0x1MENKRE1SNHRhcUoKYmIxRWVLSmVsTGZaS2xQYlpsdkd6cGk0Vm1oLzFFNG9xUWhBNWhGSkMwU2V0cUJ0UHhseFZuM2JLVGtpRnJBeQp2ZXlYbmVjWHNKRVU1RGFYNjRodC9RZE1TNStacEhmbTZkN3hhUFJBanExOHhBVnJPQ01FazNlajFRUVhzcVJtCmdwZUZ3cWo1eXE3Q1lxQUZDL1J6TWJKcGpLUFJnaU8rK2pSK0FrWmZrUzlvTW1jNUp2cUpRU05CRHRZUDZtMjYKMng5dXhWZWNFVUo5YlRrVnpuOWtWb2NteWlhK1NhRUNySURwdk1JTWxuRjk0cW5pZ2d6N1AzbnRSRGNiZ1hjTgpid3lxaS9HL284dWlTTkQ1ZXFvMlFzM2RTWmVrZmpaSGptZmlJZEhCMzIxVDJFSmszNkk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
  sideEffects: None
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.4
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    cliVersion: linkerd/cli stable-2.13.4
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
    cniEnabled: false
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controllerImage: cr.l5d.io/linkerd/controller
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: stable-2.13.4
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationProxyResources: null
    destinationResources: null
    disableHeartBeat: false
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    heartbeatResources: null
    heartbeatSchedule: ""
    highAvailability: false
    identity:
      externalCA: false
      issuer:
        clockSkewAllowance: 20s
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
            eS5saW5rZXJkLjAeFw0yMzA2MTQxMzE5MjRaFw0yNDA2MTMxMzE5NDRaMBwxGjAY
            BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
            QgAEXkR/YpJA5tu2DDBlQE9zMukQkUbF0HyaP7AVqYhsDmD8bzZzRm4VcxbqKrAp
            cgo5UhBmo0QnXlbIGSs4S3XBVqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
            MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
            BBThSFWoxJzUGJ3uVtapbxtY8RJ2YzAKBggqhkjOPQQDAgNJADBGAiEA7McVoS7z
            SFbq6dAoY+vPRReW4oNewztvnIfZLSFI+10CIQDqTuct66yuohn1VrzFS/AEqO9L
            S/Q2TG0y37+Kj4dDww==
            -----END CERTIFICATE-----
      serviceAccountTokenProjection: true
    identityProxyResources: null
    identityResources: null
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
      eS5saW5rZXJkLjAeFw0yMzA2MTQxMzE5MjRaFw0yNDA2MTMxMzE5NDRaMBwxGjAY
      BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
      QgAEXkR/YpJA5tu2DDBlQE9zMukQkUbF0HyaP7AVqYhsDmD8bzZzRm4VcxbqKrAp
      cgo5UhBmo0QnXlbIGSs4S3XBVqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
      MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
      BBThSFWoxJzUGJ3uVtapbxtY8RJ2YzAKBggqhkjOPQQDAgNJADBGAiEA7McVoS7z
      SFbq6dAoY+vPRReW4oNewztvnIfZLSFI+10CIQDqTuct66yuohn1VrzFS/AEqO9L
      S/Q2TG0y37+Kj4dDww==
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    linkerdVersion: stable-2.13.4
    networkValidator:
      connectAddr: 1.1.1.1:20001
      listenAddr: 0.0.0.0:4140
      logFormat: plain
      logLevel: debug
      timeout: 10s
    nodeAffinity: null
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      accessLog: ""
      await: true
      capabilities: null
      defaultInboundPolicy: all-unauthenticated
      enableExternalProfiles: false
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: ""
      inboundConnectTimeout: 100ms
      inboundDiscoveryCacheUnusedTimeout: 90s
      isGateway: false
      isIngress: false
      logFormat: plain
      logLevel: warn,linkerd=info,trust_dns=error
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outboundConnectTimeout: 1000ms
      outboundDiscoveryCacheUnusedTimeout: 5s
      podInboundPorts: ""
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      saMountPath: null
      shutdownGracePeriod: ""
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyContainerName: linkerd-proxy
    proxyInit:
      capabilities: null
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.2.1
      iptablesMode: legacy
      kubeAPIServerPorts: 443,6443
      logFormat: ""
      logLevel: ""
      privileged: false
      resources:
        cpu:
          limit: 100m
          request: 100m
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: 20Mi
          request: 20Mi
      runAsRoot: false
      runAsUser: 65534
      saMountPath: null
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
        readOnly: false
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
    proxyInjectorProxyResources: null
    proxyInjectorResources: null
    tolerations: null
    webhookFailurePolicy: Ignore
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.4
  name: ext-namespace-metadata-linkerd-config
  namespace: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
###
### Identity Controller Service
###
---
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.4
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpVENDQVM2Z0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQWNNUm93R0FZRFZRUURFeEZwWkdWdWRHbDAKZVM1c2FXNXJaWEprTGpBZUZ3MHlNekEyTVRReE16RTVNalJhRncweU5EQTJNVE14TXpFNU5EUmFNQnd4R2pBWQpCZ05WQkFNVEVXbGtaVzUwYVhSNUxteHBibXRsY21RdU1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEClFnQUVYa1IvWXBKQTV0dTJEREJsUUU5ek11a1FrVWJGMEh5YVA3QVZxWWhzRG1EOGJ6WnpSbTRWY3hicUtyQXAKY2dvNVVoQm1vMFFuWGxiSUdTczRTM1hCVnFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwpNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXCkJCVGhTRldveEp6VUdKM3VWdGFwYnh0WThSSjJZekFLQmdncWhrak9QUVFEQWdOSkFEQkdBaUVBN01jVm9TN3oKU0ZicTZkQW9ZK3ZQUlJlVzRvTmV3enR2bklmWkxTRkkrMTBDSVFEcVR1Y3Q2Nnl1b2huMVZyekZTL0FFcU85TApTL1EyVEcweTM3K0tqNGREd3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUM4V2pKTURWc1BvV0RIWXkxQmR5NExxU0dkMVMycnhYalFXQllaVm45QzBvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFWGtSL1lwSkE1dHUyRERCbFFFOXpNdWtRa1ViRjBIeWFQN0FWcVloc0RtRDhielp6Um00VgpjeGJxS3JBcGNnbzVVaEJtbzBRblhsYklHU3M0UzNYQlZnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.4
data:
  ca-bundle.crt: |-
    -----BEGIN CERTIFICATE-----
    MIIBiTCCAS6gAwIBAgIBATAKBggqhkjOPQQDAjAcMRowGAYDVQQDExFpZGVudGl0
    eS5saW5rZXJkLjAeFw0yMzA2MTQxMzE5MjRaFw0yNDA2MTMxMzE5NDRaMBwxGjAY
    BgNVBAMTEWlkZW50aXR5LmxpbmtlcmQuMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcD
    QgAEXkR/YpJA5tu2DDBlQE9zMukQkUbF0HyaP7AVqYhsDmD8bzZzRm4VcxbqKrAp
    cgo5UhBmo0QnXlbIGSs4S3XBVqNhMF8wDgYDVR0PAQH/BAQDAgEGMB0GA1UdJQQW
    MBQGCCsGAQUFBwMBBggrBgEFBQcDAjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW
    BBThSFWoxJzUGJ3uVtapbxtY8RJ2YzAKBggqhkjOPQQDAgNJADBGAiEA7McVoS7z
    SFbq6dAoY+vPRReW4oNewztvnIfZLSFI+10CIQDqTuct66yuohn1VrzFS/AEqO9L
    S/Q2TG0y37+Kj4dDww==
    -----END CERTIFICATE-----
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.4
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.4
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.13.4
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.13.4
        linkerd.io/proxy-version: stable-2.13.4
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 17f6db67f9e2c49975521600c6ad00dc6c082ddb41f481d009cdc11bee572b75
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:stable-2.13.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.13.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.1
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.4
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.4
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.4
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.13.4
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.13.4
        linkerd.io/proxy-version: stable-2.13.4
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 17f6db67f9e2c49975521600c6ad00dc6c082ddb41f481d009cdc11bee572b75
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.13.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.13.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.13.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16
        - --identity-domain=cluster.local
        - --cluster-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - --probe-networks=0.0.0.0/0
        image: cr.l5d.io/linkerd/policy-controller:stable-2.13.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin-http
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin-http
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin-http
          initialDelaySeconds: 10
        resources:
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.1
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.13.4
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.4
spec:
  concurrencyPolicy: Replace
  schedule: "29 13 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/cli stable-2.13.4
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          securityContext:
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:stable-2.13.4
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              capabilities:
                drop:
                - ALL
              runAsNonRoot: true
              runAsUser: 2103
              allowPrivilegeEscalation: false
              seccompProfile:
                type: RuntimeDefault
---
###
### Proxy Injector
###
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.4
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: stable-2.13.4
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli stable-2.13.4
        linkerd.io/proxy-version: stable-2.13.4
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 17f6db67f9e2c49975521600c6ad00dc6c082ddb41f481d009cdc11bee572b75
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,trust_dns=error"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: "$(_pod_ns):$(_pod_name)"
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: 0.0.0.0:4190
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: 0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: 127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: 0.0.0.0:4143
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:stable-2.13.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:stable-2.13.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.2.1
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
          limits:
            cpu: "100m"
            memory: "20Mi"
          requests:
            cpu: "100m"
            memory: "20Mi"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsNonRoot: true
          runAsUser: 65534
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/cli stable-2.13.4
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
apiVersion: v1
data:
  linkerd-config-overrides: aWRlbnRpdHk6CiAgaXNzdWVyOgogICAgdGxzOgogICAgICBjcnRQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgICAgICBNSUlCaVRDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgICAgICAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNekEyTVRReE16RTVNalJhRncweU5EQTJNVE14TXpFNU5EUmFNQnd4R2pBWQogICAgICAgIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICAgICAgICBRZ0FFWGtSL1lwSkE1dHUyRERCbFFFOXpNdWtRa1ViRjBIeWFQN0FWcVloc0RtRDhielp6Um00VmN4YnFLckFwCiAgICAgICAgY2dvNVVoQm1vMFFuWGxiSUdTczRTM1hCVnFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogICAgICAgIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICAgICAgICBCQlRoU0ZXb3hKelVHSjN1VnRhcGJ4dFk4UkoyWXpBS0JnZ3Foa2pPUFFRREFnTkpBREJHQWlFQTdNY1ZvUzd6CiAgICAgICAgU0ZicTZkQW9ZK3ZQUlJlVzRvTmV3enR2bklmWkxTRkkrMTBDSVFEcVR1Y3Q2Nnl1b2huMVZyekZTL0FFcU85TAogICAgICAgIFMvUTJURzB5MzcrS2o0ZER3dz09CiAgICAgICAgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQogICAgICBrZXlQRU06IHwKICAgICAgICAtLS0tLUJFR0lOIEVDIFBSSVZBVEUgS0VZLS0tLS0KICAgICAgICBNSGNDQVFFRUlDOFdqSk1EVnNQb1dESFl5MUJkeTRMcVNHZDFTMnJ4WGpRV0JZWlZuOUMwb0FvR0NDcUdTTTQ5CiAgICAgICAgQXdFSG9VUURRZ0FFWGtSL1lwSkE1dHUyRERCbFFFOXpNdWtRa1ViRjBIeWFQN0FWcVloc0RtRDhielp6Um00VgogICAgICAgIGN4YnFLckFwY2dvNVVoQm1vMFFuWGxiSUdTczRTM1hCVmc9PQogICAgICAgIC0tLS0tRU5EIEVDIFBSSVZBVEUgS0VZLS0tLS0KaWRlbnRpdHlUcnVzdEFuY2hvcnNQRU06IHwKICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICBNSUlCaVRDQ0FTNmdBd0lCQWdJQkFUQUtCZ2dxaGtqT1BRUURBakFjTVJvd0dBWURWUVFERXhGcFpHVnVkR2wwCiAgZVM1c2FXNXJaWEprTGpBZUZ3MHlNekEyTVRReE16RTVNalJhRncweU5EQTJNVE14TXpFNU5EUmFNQnd4R2pBWQogIEJnTlZCQU1URVdsa1pXNTBhWFI1TG14cGJtdGxjbVF1TUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0QKICBRZ0FFWGtSL1lwSkE1dHUyRERCbFFFOXpNdWtRa1ViRjBIeWFQN0FWcVloc0RtRDhielp6Um00VmN4YnFLckFwCiAgY2dvNVVoQm1vMFFuWGxiSUdTczRTM1hCVnFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdFR01CMEdBMVVkSlFRVwogIE1CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKICBCQlRoU0ZXb3hKelVHSjN1VnRhcGJ4dFk4UkoyWXpBS0JnZ3Foa2pPUFFRREFnTkpBREJHQWlFQTdNY1ZvUzd6CiAgU0ZicTZkQW9ZK3ZQUlJlVzRvTmV3enR2bklmWkxTRkkrMTBDSVFEcVR1Y3Q2Nnl1b2huMVZyekZTL0FFcU85TAogIFMvUTJURzB5MzcrS2o0ZER3dz09CiAgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
kind: Secret
metadata:
  creationTimestamp: null
  labels:
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-config-overrides
  namespace: linkerd
